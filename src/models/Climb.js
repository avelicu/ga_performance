import { interpolate2d, interpolate } from './Interpolator.js';
 
class Climb {
    static _pa_oat = {
         0: { "-25": 1150, 55: 950 },
         2000: { "-30": 1050, 50: 850 },
         4000: { "-33": 950, 47: 750 },
         6000: { "-36": 850, 40: 650 },
         8000: { "-40": 725, 37: 575 },
         10000: { "-45": 625, 35: 475 },
         12000: { "-50": 500, 30: 400 },
         14000: { "-52": 400, 27: 300 },
         16000: { "-57": 275, 23: 225 },
         18000: { "-60": 160, 20: 125 },
         20000: { "-60": 50, 15: 25 },
    }
     
    static _weight = {
         0: { 2740: 0, 2300: 425 },
         150: { 2740: 150, 2300: 575 },
         250: { 2740: 250, 2300: 575 },
         350: { 2740: 350, 2300: 850 },
         475: { 2740: 475, 2300: 950 },
         575: { 2740: 575, 2300: 1100 },
         700: { 2740: 700, 2300: 1250 },
         825: { 2740: 825, 2300: 1400 },
         925: { 2740: 925, 2300: 1550 },
         1050: { 2740: 1050, 2300: 1700 },
         1175: { 2740: 1175, 2300: 1900 },
    }

    static _speed = {
        2740: { 0: 88, 5000: 85, 10000: 81, 15000: 79, 20000: 74 },
        2300: { 0: 81, 5000: 78, 10000: 74, 15000: 72, 20000: 68 },
        2000: { 0: 76, 5000: 73, 10000: 69, 15000: 67, 20000: 64 },
    }
    
    static getRate(pa, oat, weight) {
        var stage1 = interpolate2d(this._pa_oat, pa, oat);
        var stage2 = interpolate2d(this._weight, stage1, weight);
        return stage2;
    }

    static getVy(weight, pa) {
        return interpolate2d(this._speed, weight, pa);
    }
}


export { Climb };